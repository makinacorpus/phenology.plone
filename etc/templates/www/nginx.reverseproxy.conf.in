upstream ${options.uname} {
    server ${parts.hosts['zope-front']}:${parts.ports['zope-front']};
}
{% if options.server_aliases.strip() %}
{% for h in options.server_aliases.split(',') %}
server {
    listen ${options.port};
    server_name ${h.strip()};
    rewrite ^\/?(.*) http://${options.host}${'$request_uri'} permanent;
}
{% end %}
{% end %}

server {
    listen ${options.port};
    server_name ${options.host};
    root ${parts.v['reverse-proxy-docroot']};
    access_log ${parts.buildout.directory}/var/log/nginx/${options.host}.access.log;
    error_log  ${parts.buildout.directory}/var/log/nginx/${options.host}.error.log;
    location /zmiroot/ {
        proxy_pass  http://${options.uname}/VirtualHostBase/http/${options.host}:${options.port}/VirtualHostRoot/_vh_zmiroot/;
    }

    location / {
        set ${'$maint'} "n";
        if ( -f ${parts.v['reverse-proxy-docroot']}/maintainance/index.html ){
            set ${'$maint'} "m";
        }
        if ( ${'$uri'} ~ ^/maintainance ) {
            set ${'$maint'} "o${'$maint'}";
        }
        if ( ${'$maint'} = "m" ) {
            rewrite ^(.*)$ /maintainance/index.html permanent;
        }
        if ( ${'$maint'} = "n" ){
            rewrite ^(/zmiroot/.*)$ /VirtualHostBase/http/${options.host}:${options.port}/_vh_zmiroot/$1 break;
            rewrite ^(.*)$ /VirtualHostBase/http/${options.host}:${options.port}/${parts.v['plonesite']}/VirtualHostRoot/$1 break;
            proxy_pass http://${options.uname};
        }
    }
}
e vim: set sts=4 ts=4 et tw=0 ai et nocompatible:
